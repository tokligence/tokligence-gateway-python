name: Version Management

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - custom
      custom_version:
        description: 'Custom version (if type is custom)'
        required: false
        type: string
      create_release:
        description: 'Create GitHub release'
        type: boolean
        default: true
      publish_pypi:
        description: 'Publish to PyPI after tagging'
        type: boolean
        default: false

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Configure Git
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"

    - name: Bump version
      id: bump
      run: |
        if [ "${{ github.event.inputs.version_type }}" = "custom" ]; then
          VERSION="${{ github.event.inputs.custom_version }}"
        else
          VERSION="${{ github.event.inputs.version_type }}"
        fi

        python scripts/bump_version.py $VERSION --commit

        # Get the new version
        NEW_VERSION=$(python -c "import re; content = open('pyproject.toml').read(); print(re.search(r'version = \"(.*?)\"', content).group(1))")
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"

    - name: Create and push tag
      env:
        GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      run: |
        VERSION=${{ steps.bump.outputs.new_version }}
        git tag -a "v$VERSION" -m "Release version $VERSION"

        # Push using the PAT token
        git push https://${GH_TOKEN}@github.com/${{ github.repository }}.git main
        git push https://${GH_TOKEN}@github.com/${{ github.repository }}.git "v$VERSION"

    - name: Create Release
      if: github.event.inputs.create_release == 'true'
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.PAT_TOKEN }}
        tag_name: v${{ steps.bump.outputs.new_version }}
        name: Release v${{ steps.bump.outputs.new_version }}
        generate_release_notes: true
        draft: false
        prerelease: false

  trigger-publish:
    name: Trigger PyPI Publish
    needs: bump-version
    if: github.event.inputs.publish_pypi == 'true'
    runs-on: ubuntu-latest

    steps:
    - name: Trigger publish workflow
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.PAT_TOKEN }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'publish.yml',
            ref: 'main',
            inputs: {
              version: '${{ needs.bump-version.outputs.new_version }}',
              test_pypi: 'false'
            }
          })