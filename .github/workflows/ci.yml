name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Skip some combinations to save CI time
          - os: macos-latest
            python-version: '3.8'
          - os: windows-latest
            python-version: '3.8'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e . || pip install .

    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check tokligence/ tests/ || true

    - name: Type check with mypy
      run: |
        pip install mypy types-requests types-pyyaml
        mypy tokligence --ignore-missing-imports || true

    - name: Run tests
      run: |
        pip install pytest pytest-cov
        pytest tests/ -v || true

    - name: Test CLI commands
      run: |
        tokligence --help || true
        tokligence version || true

    - name: Build package
      run: |
        pip install build
        python -m build

    - name: Check package
      run: |
        pip install twine
        twine check dist/*

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black ruff mypy

    - name: Format check with black
      run: |
        black --check tokligence/ tests/ || true

    - name: Security check
      run: |
        pip install bandit safety
        bandit -r tokligence/ || true
        pip list --format=freeze | safety check --stdin || true